from Crypto.Util.number import *
from sympy.ntheory import factorint
import gmpy2
import base64
import base64

n = 188198812920607963838697239461650439807163563379417382700763356422988859715234665485319060606504743045317388011303396716199692321205734031879550656996221305168759307650257059
e = 65537
p = 398075086424064937397125500550386491199064362342526708406385189575946388957261768583317
q = 472772146107435302536223071973048224632914695302097116459852171130520711256363590397527

cipher = "e8oQDihsmkvjT3sZe+EE8lwNvBEsFegYF6+OOFOiR6gMtMZxxba/bIgLUD8pV3yEf0gOOfHuB5bC3vQmo7bE4PcIKfpFGZBA"

phi = (p-1)*(q-1)
d = inverse(e, phi)

c = bytes_to_long(base64.b64decode(cipher))

m = pow(c, d, n)

decrypted_message = (long_to_bytes(m))

print(decrypted_message)

# flag pour RSA-Factorisation (root me) : up2l6DnaIhZgxA



